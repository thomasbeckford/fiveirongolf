/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    locations: Location;
    media: Media;
    leagues: League;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    locations: LocationsSelect<false> | LocationsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    leagues: LeaguesSelect<false> | LeaguesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: string;
  /**
   * e.g., "Chicago River North", "Main Street"
   */
  name: string;
  /**
   * Auto-generated from name if empty
   */
  slug: string;
  /**
   * e.g., "Port Chester", "Chicago"
   */
  city: string;
  status: 'active' | 'coming-soon' | 'temp-closed' | 'closed';
  /**
   * Legacy field - use Status instead
   */
  comingSoon?: boolean | null;
  experiences?: ('Golf' | 'Bowling' | 'Multisport')[] | null;
  hasDuckpin?: boolean | null;
  /**
   * Complete street address including city, state, and ZIP
   */
  address: string;
  /**
   * e.g., "Port Chester, NY 10573"
   */
  address_zipcode?: string | null;
  /**
   * Format: (555) 123-4567
   */
  phone?: string | null;
  email?: string | null;
  /**
   * Click on map or enter coordinates manually
   *
   * @minItems 2
   * @maxItems 2
   */
  coordinates?: [number, number] | null;
  /**
   * Direct link to Google Maps location
   */
  mapUrl?: string | null;
  timezone?: ('America/New_York' | 'America/Chicago' | 'America/Denver' | 'America/Los_Angeles') | null;
  SeoSchema?: {
    /**
     * Keep under 60 characters for Google
     */
    title?: string | null;
    /**
     * Keep under 160 characters for Google
     */
    description?: string | null;
  };
  HeroSchema: {
    /**
     * e.g., "Chicago", "New York"
     */
    title: string;
    /**
     * e.g., "River North", "Flatiron"
     */
    subtitle?: string | null;
    /**
     * Hero background image (optional)
     */
    backgroundImage?: (string | null) | Media;
    /**
     * Optional hero description text
     */
    description?: string | null;
    floorplan?: {
      available?: boolean | null;
      url?: string | null;
    };
    ctaButton?: {
      text?: string | null;
      url?: string | null;
      type?: ('primary' | 'secondary') | null;
    };
  };
  ActivitySchema?: {
    /**
     * Add services and activities offered at this location
     */
    services?:
      | {
          /**
           * e.g., "PLAY &", "GOLF"
           */
          title: string;
          /**
           * e.g., "PRACTICE", "INSTRUCTION"
           */
          subtitle?: string | null;
          /**
           * Service description and details
           */
          description: string;
          /**
           * Key highlights for this service
           */
          highlights?:
            | {
                /**
                 * e.g., "Location", "Technology"
                 */
                label: string;
                /**
                 * Highlight description
                 */
                text: string;
                id?: string | null;
              }[]
            | null;
          /**
           * List of pricing information
           */
          pricing?:
            | {
                /**
                 * e.g., "Starting at $45/hour", "Group rates available"
                 */
                item: string;
                id?: string | null;
              }[]
            | null;
          /**
           * Label for pricing section (e.g., "SIM RENTAL PRICING")
           */
          pricingLabel?: string | null;
          primaryCta?: {
            /**
             * e.g., "BOOK A SIM", "BOOK A LESSON"
             */
            text?: string | null;
            /**
             * Link for the primary action
             */
            url?: string | null;
          };
          secondaryCta?: {
            /**
             * e.g., "WAYS TO PLAY", "LEARN MORE"
             */
            text?: string | null;
            /**
             * Link for the secondary action
             */
            url?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  HoursSchema: {
    /**
     * URL to background image for hours section
     */
    backgroundImage?: (string | null) | Media;
    simRentalPricing: {
      /**
       * e.g., "SIM RENTAL PRICING"
       */
      title: string;
      /**
       * Link for the primary action
       */
      url: string;
    };
    /**
     * Regular operating hours grouped by days
     */
    regularHours: {
      /**
       * e.g., "Monday - Thursday", "Friday", "Saturday"
       */
      days: string;
      /**
       * e.g., "6AM - 11PM", "8AM - 1AM"
       */
      hours: string;
      id?: string | null;
    }[];
    /**
     * Special hours like member benefits, promotions, etc.
     */
    specialHours?:
      | {
          /**
           * e.g., "Member Benefits (M-F)", "Happy Hour"
           */
          description: string;
          /**
           * e.g., "6AM - 4PM", "8PM - Close"
           */
          hours: string;
          id?: string | null;
        }[]
      | null;
  };
  MembershipSchema?: {
    giftCard?: {
      /**
       * Text for the gift card banner
       */
      title?: string | null;
      /**
       * Text for the gift card button
       */
      buttonText?: string | null;
      /**
       * Link to purchase gift cards
       */
      url?: string | null;
    };
    /**
     * URL to background image for membership section
     */
    backgroundImage?: (string | null) | Media;
    /**
     * Main membership title (e.g., "BECOME A MEMBER")
     */
    title?: string | null;
    /**
     * Membership subtitle
     */
    subtitle?: string | null;
    /**
     * Main membership description text
     */
    description?: string | null;
    pricing?: {
      /**
       * e.g., "$279/mo."
       */
      monthlyPrice?: string | null;
      /**
       * e.g., "No initiation fees. Cancel any time."
       */
      terms?: string | null;
    };
    /**
     * List of membership benefits
     */
    benefits?:
      | {
          /**
           * e.g., "Free Golf", "Exclusive Discounts"
           */
          title: string;
          /**
           * Detailed description of the benefit
           */
          description: string;
          id?: string | null;
        }[]
      | null;
    form?: {
      /**
       * Legal disclaimer text for the form
       */
      privacyText?: string | null;
      /**
       * Text for the form submit button
       */
      submitText?: string | null;
    };
  };
  GallerySchema?: {
    /**
     * Add images to the gallery
     */
    images?:
      | {
          /**
           * Direct URL to the image
           */
          url: string | Media;
          /**
           * Alternative text for accessibility
           */
          alt: string;
          /**
           * Caption displayed below the image
           */
          caption?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  FeaturesSchema?: {
    /**
     * Add feature cards highlighting key services
     */
    features?:
      | {
          /**
           * Unique identifier for the feature
           */
          id: string;
          /**
           * Main title for the feature card
           */
          title: string;
          /**
           * Detailed description of the feature
           */
          description: string;
          /**
           * Hex color code for neon accent (e.g., #39ff14)
           */
          neonColor?: string | null;
          /**
           * Text for the call-to-action button
           */
          ctaText?: string | null;
          /**
           * Link for the call-to-action button
           */
          ctaUrl?: string | null;
        }[]
      | null;
  };
  ReviewSchema: {
    /**
     * Main heading for the reviews section
     */
    title: string;
    /**
     * Add customer reviews and testimonials
     */
    reviews?:
      | {
          /**
           * Rating from 1 to 5 stars
           */
          rating: number;
          /**
           * The customer review content
           */
          text: string;
          /**
           * Name of the person who wrote the review
           */
          author: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Text for the call-to-action button
     */
    ctaText?: string | null;
    /**
     * Link for the call-to-action button
     */
    ctaUrl?: string | null;
  };
  MultisportSchema: {
    /**
     * Main banner text above the multisport section
     */
    topBanner?: string | null;
    title?: string | null;
    subtitle?: string | null;
    description: string;
    /**
     * Call-to-action button text
     */
    ctaText?: string | null;
    /**
     * Call-to-action button link
     */
    ctaUrl?: string | null;
    /**
     * Add slides for the multisport carousel
     */
    slides?:
      | {
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
    /**
     * List of available multisport games
     */
    sports?:
      | {
          /**
           * Unique identifier for the sport
           */
          id: string;
          /**
           * Display name of the sport
           */
          name: string;
        }[]
      | null;
  };
  DuckpinSchema: {
    /**
     * URL to background image for the duckpin section
     */
    backgroundImage?: (string | null) | Media;
    /**
     * Text that appears before the main title
     */
    preTitle?: string | null;
    /**
     * Main heading for the duckpin section
     */
    title: string;
    /**
     * Main description of duckpin bowling
     */
    description: string;
    /**
     * Encouraging text before the booking button
     */
    callToAction?: string | null;
    /**
     * Text displayed on the booking button
     */
    buttonText?: string | null;
    /**
     * Link for booking duckpin lanes
     */
    bookingUrl?: string | null;
    /**
     * Common questions about duckpin bowling
     */
    faqs?:
      | {
          /**
           * Unique identifier for the FAQ
           */
          id: string;
          /**
           * The FAQ question
           */
          question: string;
          /**
           * The answer to the question
           */
          answer: string;
        }[]
      | null;
  };
  InstructorSchema?: {
    /**
     * Add golf instructors for this location
     */
    coaches?:
      | {
          /**
           * Unique identifier for the coach (e.g., "cole-langley")
           */
          id: string;
          /**
           * Full name of the coach
           */
          name: string;
          /**
           * e.g., "Senior Golf Coach", "Golf Coach"
           */
          title: string;
          /**
           * Coach background and specialties
           */
          bio?: string | null;
          /**
           * URL to coach photo
           */
          image?: string | null;
        }[]
      | null;
    /**
     * Link to book a lesson
     */
    bookLessonUrl?: string | null;
    /**
     * Link to learn more about coaches
     */
    learnMoreUrl?: string | null;
  };
  FooterSchema?: {
    newsletter?: {
      /**
       * Title for the newsletter signup section
       */
      title?: string | null;
      /**
       * Location options for newsletter signup
       */
      locations?:
        | {
            label: string;
            value: string;
            id?: string | null;
          }[]
        | null;
      /**
       * Terms and privacy disclaimer text
       */
      disclaimer?: string | null;
    };
    brand?: {
      /**
       * Company tagline or slogan
       */
      tagline?: string | null;
      /**
       * Social media platform links
       */
      socialMedia?:
        | {
            platform: 'instagram' | 'twitter' | 'facebook' | 'youtube' | 'linkedin';
            url: string;
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Primary navigation links
     */
    quickLinks?:
      | {
          label: string;
          url: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Secondary navigation links
     */
    moreLinks?:
      | {
          label: string;
          url: string;
          id?: string | null;
        }[]
      | null;
    contact?: {
      email?: string | null;
      phone?: string | null;
    };
    /**
     * Copyright notice text
     */
    copyright?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leagues".
 */
export interface League {
  id: string;
  name: string;
  slug: string;
  description: string;
  contact: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey: string;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'locations';
        value: string | Location;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'leagues';
        value: string | League;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  city?: T;
  status?: T;
  comingSoon?: T;
  experiences?: T;
  hasDuckpin?: T;
  address?: T;
  address_zipcode?: T;
  phone?: T;
  email?: T;
  coordinates?: T;
  mapUrl?: T;
  timezone?: T;
  SeoSchema?:
    | T
    | {
        title?: T;
        description?: T;
      };
  HeroSchema?:
    | T
    | {
        title?: T;
        subtitle?: T;
        backgroundImage?: T;
        description?: T;
        floorplan?:
          | T
          | {
              available?: T;
              url?: T;
            };
        ctaButton?:
          | T
          | {
              text?: T;
              url?: T;
              type?: T;
            };
      };
  ActivitySchema?:
    | T
    | {
        services?:
          | T
          | {
              title?: T;
              subtitle?: T;
              description?: T;
              highlights?:
                | T
                | {
                    label?: T;
                    text?: T;
                    id?: T;
                  };
              pricing?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              pricingLabel?: T;
              primaryCta?:
                | T
                | {
                    text?: T;
                    url?: T;
                  };
              secondaryCta?:
                | T
                | {
                    text?: T;
                    url?: T;
                  };
              id?: T;
            };
      };
  HoursSchema?:
    | T
    | {
        backgroundImage?: T;
        simRentalPricing?:
          | T
          | {
              title?: T;
              url?: T;
            };
        regularHours?:
          | T
          | {
              days?: T;
              hours?: T;
              id?: T;
            };
        specialHours?:
          | T
          | {
              description?: T;
              hours?: T;
              id?: T;
            };
      };
  MembershipSchema?:
    | T
    | {
        giftCard?:
          | T
          | {
              title?: T;
              buttonText?: T;
              url?: T;
            };
        backgroundImage?: T;
        title?: T;
        subtitle?: T;
        description?: T;
        pricing?:
          | T
          | {
              monthlyPrice?: T;
              terms?: T;
            };
        benefits?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
            };
        form?:
          | T
          | {
              privacyText?: T;
              submitText?: T;
            };
      };
  GallerySchema?:
    | T
    | {
        images?:
          | T
          | {
              url?: T;
              alt?: T;
              caption?: T;
              id?: T;
            };
      };
  FeaturesSchema?:
    | T
    | {
        features?:
          | T
          | {
              id?: T;
              title?: T;
              description?: T;
              neonColor?: T;
              ctaText?: T;
              ctaUrl?: T;
            };
      };
  ReviewSchema?:
    | T
    | {
        title?: T;
        reviews?:
          | T
          | {
              rating?: T;
              text?: T;
              author?: T;
              id?: T;
            };
        ctaText?: T;
        ctaUrl?: T;
      };
  MultisportSchema?:
    | T
    | {
        topBanner?: T;
        title?: T;
        subtitle?: T;
        description?: T;
        ctaText?: T;
        ctaUrl?: T;
        slides?:
          | T
          | {
              image?: T;
              id?: T;
            };
        sports?:
          | T
          | {
              id?: T;
              name?: T;
            };
      };
  DuckpinSchema?:
    | T
    | {
        backgroundImage?: T;
        preTitle?: T;
        title?: T;
        description?: T;
        callToAction?: T;
        buttonText?: T;
        bookingUrl?: T;
        faqs?:
          | T
          | {
              id?: T;
              question?: T;
              answer?: T;
            };
      };
  InstructorSchema?:
    | T
    | {
        coaches?:
          | T
          | {
              id?: T;
              name?: T;
              title?: T;
              bio?: T;
              image?: T;
            };
        bookLessonUrl?: T;
        learnMoreUrl?: T;
      };
  FooterSchema?:
    | T
    | {
        newsletter?:
          | T
          | {
              title?: T;
              locations?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              disclaimer?: T;
            };
        brand?:
          | T
          | {
              tagline?: T;
              socialMedia?:
                | T
                | {
                    platform?: T;
                    url?: T;
                    id?: T;
                  };
            };
        quickLinks?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        moreLinks?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        contact?:
          | T
          | {
              email?: T;
              phone?: T;
            };
        copyright?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leagues_select".
 */
export interface LeaguesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  contact?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}